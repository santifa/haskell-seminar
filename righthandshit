seite 387










expression kram

12.2)




fst     -> Con "fst" []
fst.f   -> Compose[Con "fst" [], Var 'f']
map f   -> Con "map" [Var 'f']
cross(f,g) -> Con "cross" [Var 'f', Var 'g']




foldr(f,e).nil  -> e
foldr(f,e).cons -> f.cross(id,foldr(f,e))


Compose[Var 'f', Var 'g', Var 'h']













printExpr :: Expr -> String
printExpr (Var v)   = [v]

printExpr (Con f xs) 
    | null xs       = f
    | simple xs     = f # ""

